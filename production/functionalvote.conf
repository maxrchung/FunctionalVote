# Hard linked to /etc/nginx/sites-available
# Symlinked from /etc/nginx/sites-available to /etc/nginx/sites-enabled

# main
server {

    server_name functionalvote.com www.functionalvote.com;

    root /home/ubuntu/FunctionalVote/frontend/build;
    index index.html;

    location / {
        try_files $uri /index.html;
    }

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/functionalvote.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/functionalvote.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

# HTTP redirect
server {

    if ($host = www.functionalvote.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = functionalvote.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    listen [::]:80;

    server_name functionalvote.com www.functionalvote.com;
    return 404; # managed by Certbot

}

# backend
server {

    location / {
        proxy_pass http://0.0.0.0:4000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Keeps websocket connection alive for this long
        proxy_read_timeout 1h;
    }

    listen [::]:4001 ssl ipv6only=on; # managed by Certbot
    listen 4001 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/functionalvote.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/functionalvote.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
